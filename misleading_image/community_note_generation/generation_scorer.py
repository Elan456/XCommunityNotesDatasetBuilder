"""
Scores a community note generation by comparing the generated note to the ground truth note, using an LLM.
"""

from misleading_image.gemini import Gemini
import json 
import pandas as pd 

def get_scores(df: pd.DataFrame):
    """
    The dataframe should have columns 'generated_cn' and 'original_cn'.
    A new column 'score' will be added to the dataframe.
    """

    scores = []
    for index, row in df.iterrows():
        generated_cn = row['generated_cn']
        original_cn = row['original_cn']
        score_dict = score(generated_cn, original_cn)
        scores.append(score_dict['score'])

    df['score'] = scores
    return df


def score(generated_cn: str, original_cn : str):
    """
    Scores a community note generation by comparing the generated note to the ground truth note, using an LLM.
    """

    gemini = Gemini("misleading_image/google.key")
    prompt = ["Below are two community notes, one is the original from Twitter, another is generated by an LLM.",
              "Assume the original community note is entirely true and correct.",
              "Please score the generated community note based on how many factual differences it has compared to the original community note.",
              "Score from 0 to 1, where 0 is completely different and 1 is exactly the same. e.g. 0.3 for a pretty bad community note",
              "Give the score in following JSON format {'score': 0.3, 'reason': 'The generated note is missing some key details'}",
              "Original Community Note:",
              original_cn,
              "Generated Community Note:",
              generated_cn,
              "Score JSON:"]
    

    # no grounding
    # google grounding
    # just reverse image search
    # google grounding + reverse image search

    
    response_text = gemini.generate(prompt).text
    start = response_text.find("{")
    end = response_text.rfind("}")
    response_text = response_text[start:end+1]
    response_json = json.loads(response_text)

    # Return as a dict
    return response_json


if __name__ == "__main__":
    # Quick test
    original_cn = "The photo of Mark Zuckerberg was taken in 2012 during a trip to Maui, Hawaii with his wife:  https://www.dailymail.co.uk/news/article-2254889/Mark-Zuckerberg-Priscilla-Chan-surfing-Christmas-Hawaii.html"
    generated_cn = "This image is a fabricated Facebook post attributed to Mark Zuckerberg, making false claims about 'adrenochrome' and Little St. James Island. The real photo of Zuckerberg was taken in Hawaii in 2012. The adrenochrome conspiracy theory is linked to antisemitism and QAnon. [https://www.logicallyfacts.com/fact-checks/no-mark-zuckerberg-did-not-admit-to-ingesting-adrenochrome]"
    print(score(generated_cn, original_cn))

